
> eslint-config-userpixel@0.0.0 print-config /Users/aleewe/code/eslint-config-userpixel
> eslint --print-config ".eslintrc.js"

{
  "globals": {
    "after": false,
    "afterEach": false,
    "before": false,
    "beforeEach": false,
    "context": false,
    "describe": false,
    "it": false,
    "mocha": false,
    "run": false,
    "setup": false,
    "specify": false,
    "suite": false,
    "suiteSetup": false,
    "suiteTeardown": false,
    "teardown": false,
    "test": false,
    "xcontext": false,
    "xdescribe": false,
    "xit": false,
    "xspecify": false,
    "__dirname": false,
    "__filename": false,
    "arguments": false,
    "Buffer": false,
    "clearImmediate": false,
    "clearInterval": false,
    "clearTimeout": false,
    "console": false,
    "exports": true,
    "GLOBAL": false,
    "global": false,
    "Intl": false,
    "module": false,
    "process": false,
    "require": false,
    "root": false,
    "setImmediate": false,
    "setInterval": false,
    "setTimeout": false
  },
  "env": {
    "mocha": true,
    "node": true,
    "commonjs": true
  },
  "rules": {
    "accessor-pairs": [
      "warn"
    ],
    "array-bracket-spacing": [
      "warn",
      "always",
      {
        "singleValue": false,
        "objectsInArrays": false,
        "arraysInArrays": false
      }
    ],
    "array-callback-return": [
      "error"
    ],
    "arrow-body-style": [
      "warn",
      "as-needed",
      {
        "requireReturnForObjectLiteral": false
      }
    ],
    "arrow-parens": [
      "warn",
      "always",
      {
        "requireForBlockBody": true
      }
    ],
    "arrow-spacing": [
      "warn",
      {
        "before": true,
        "after": true
      }
    ],
    "block-scoped-var": [
      "error"
    ],
    "block-spacing": [
      "warn",
      "always"
    ],
    "brace-style": [
      "warn",
      "1tbs",
      {
        "allowSingleLine": true
      }
    ],
    "callback-return": [
      "error"
    ],
    "camelcase": [
      "error",
      {
        "properties": "never"
      }
    ],
    "capitalized-comments": [
      "off"
    ],
    "class-methods-use-this": [
      "warn"
    ],
    "comma-dangle": [
      "error",
      {
        "objects": "only-multiline",
        "arrays": "only-multiline",
        "functions": "never"
      }
    ],
    "comma-spacing": [
      "warn",
      {
        "before": false,
        "after": true
      }
    ],
    "comma-style": [
      "warn",
      "last"
    ],
    "complexity": [
      "warn",
      {
        "max": 20
      }
    ],
    "computed-property-spacing": [
      "warn",
      "never"
    ],
    "consistent-return": [
      "error"
    ],
    "consistent-this": [
      "warn",
      "that",
      "self",
      "_this"
    ],
    "constructor-super": [
      "error"
    ],
    "curly": [
      "warn",
      "multi-line"
    ],
    "default-case": [
      "warn",
      {
        "commentPattern": "^no default$"
      }
    ],
    "dot-location": [
      "error",
      "property"
    ],
    "dot-notation": [
      "warn",
      {
        "allowKeywords": true
      }
    ],
    "eol-last": [
      "warn"
    ],
    "eqeqeq": [
      "error",
      "always"
    ],
    "func-call-spacing": [
      "warn"
    ],
    "func-name-matching": [
      "warn",
      {
        "includeCommonJSModuleExports": false
      }
    ],
    "func-names": [
      "warn",
      "as-needed"
    ],
    "func-style": [
      "warn",
      "declaration",
      {
        "allowArrowFunctions": true
      }
    ],
    "generator-star-spacing": [
      "warn",
      "after"
    ],
    "global-require": [
      "warn"
    ],
    "guard-for-in": [
      "off"
    ],
    "handle-callback-err": [
      "error"
    ],
    "id-blacklist": [
      "warn",
      "cb",
      "require",
      "define",
      "set",
      "get"
    ],
    "id-length": [
      "warn",
      {
        "min": 2,
        "max": 64,
        "properties": "never",
        "exceptions": [
          "i",
          "j",
          "n",
          "r",
          "x",
          "y",
          "z"
        ]
      }
    ],
    "id-match": [
      "off"
    ],
    "indent": [
      "warn",
      2,
      {
        "SwitchCase": 1,
        "VariableDeclarator": 1,
        "outerIIFEBody": 1,
        "FunctionDeclaration": {
          "parameters": 1,
          "body": 1
        },
        "FunctionExpression": {
          "parameters": 1,
          "body": 1
        }
      }
    ],
    "init-declarations": [
      "off"
    ],
    "jsx-quotes": [
      "off"
    ],
    "key-spacing": [
      "warn",
      {
        "beforeColon": false,
        "afterColon": true,
        "mode": "minimum"
      }
    ],
    "keyword-spacing": [
      "warn",
      {
        "before": true,
        "after": true,
        "overrides": {
          "return": {
            "after": true
          },
          "throw": {
            "after": true
          },
          "case": {
            "after": true
          }
        }
      }
    ],
    "line-comment-position": [
      "off"
    ],
    "linebreak-style": [
      "error",
      "unix"
    ],
    "lines-around-comment": [
      "warn",
      {
        "beforeBlockComment": false,
        "afterBlockComment": false,
        "beforeLineComment": false,
        "afterLineComment": false,
        "allowBlockStart": true,
        "allowBlockEnd": true,
        "allowObjectStart": true,
        "allowObjectEnd": true,
        "allowArrayStart": true,
        "allowArrayEnd": true
      }
    ],
    "lines-around-directive": [
      "warn",
      "always"
    ],
    "max-depth": [
      "warn",
      {
        "max": 5
      }
    ],
    "max-len": [
      "warn",
      {
        "code": 100,
        "comments": 100,
        "tabWidth": 2,
        "ignoreUrls": true,
        "ignoreStrings": true,
        "ignorePattern": "^//  ",
        "ignoreComments": true,
        "ignoreRegExpLiterals": true,
        "ignoreTrailingComments": false,
        "ignoreTemplateLiterals": true
      }
    ],
    "max-lines": [
      "warn",
      {
        "max": 1000,
        "skipBlankLines": true,
        "skipComments": true
      }
    ],
    "max-nested-callbacks": [
      "warn",
      {
        "max": 5
      }
    ],
    "max-params": [
      "warn",
      {
        "max": 7
      }
    ],
    "max-statements-per-line": [
      "warn",
      {
        "max": 2
      }
    ],
    "max-statements": [
      "warn",
      50,
      {
        "ignoreTopLevelFunctions": false
      }
    ],
    "multiline-ternary": [
      "off"
    ],
    "new-cap": [
      "error",
      {
        "newIsCap": true,
        "capIsNew": false
      }
    ],
    "new-parens": [
      "warn"
    ],
    "newline-after-var": [
      "off"
    ],
    "newline-before-return": [
      "off"
    ],
    "newline-per-chained-call": [
      "warn",
      {
        "ignoreChainWithDepth": 4
      }
    ],
    "no-alert": [
      "error"
    ],
    "no-array-constructor": [
      "warn"
    ],
    "no-await-in-loop": [
      "warn"
    ],
    "no-bitwise": [
      "warn",
      {
        "int32Hint": true,
        "allow": [
          "~",
          ">>",
          "^",
          "<<"
        ]
      }
    ],
    "no-caller": [
      "error"
    ],
    "no-case-declarations": [
      "warn"
    ],
    "no-catch-shadow": [
      "warn"
    ],
    "no-class-assign": [
      "error"
    ],
    "no-cond-assign": [
      "error",
      "always"
    ],
    "no-confusing-arrow": [
      "warn",
      {
        "allowParens": true
      }
    ],
    "no-console": [
      "off"
    ],
    "no-const-assign": [
      "error"
    ],
    "no-constant-condition": [
      "warn",
      {
        "checkLoops": false
      }
    ],
    "no-continue": [
      "warn"
    ],
    "no-control-regex": [
      "error"
    ],
    "no-debugger": [
      "warn"
    ],
    "no-delete-var": [
      "error"
    ],
    "no-div-regex": [
      "off"
    ],
    "no-dupe-args": [
      "error"
    ],
    "no-dupe-class-members": [
      "error"
    ],
    "no-dupe-keys": [
      "error"
    ],
    "no-duplicate-case": [
      "error"
    ],
    "no-duplicate-imports": [
      "error"
    ],
    "no-else-return": [
      "warn"
    ],
    "no-empty-character-class": [
      "error"
    ],
    "no-empty-function": [
      "warn",
      {
        "allow": [
          "functions",
          "methods",
          "constructors"
        ]
      }
    ],
    "no-empty-pattern": [
      "off"
    ],
    "no-empty": [
      "warn"
    ],
    "no-eq-null": [
      "error"
    ],
    "no-eval": [
      "warn"
    ],
    "no-ex-assign": [
      "error"
    ],
    "no-extend-native": [
      "warn"
    ],
    "no-extra-bind": [
      "warn"
    ],
    "no-extra-boolean-cast": [
      "warn"
    ],
    "no-extra-label": [
      "warn"
    ],
    "no-extra-parens": [
      "warn"
    ],
    "no-extra-semi": [
      "warn"
    ],
    "no-fallthrough": [
      "error"
    ],
    "no-floating-decimal": [
      "warn"
    ],
    "no-func-assign": [
      "error"
    ],
    "no-global-assign": [
      "error"
    ],
    "no-implicit-coercion": [
      "warn"
    ],
    "no-implicit-globals": [
      "error"
    ],
    "no-implied-eval": [
      "warn"
    ],
    "no-inline-comments": [
      "off"
    ],
    "no-inner-declarations": [
      "error"
    ],
    "no-invalid-regexp": [
      "error"
    ],
    "no-invalid-this": [
      "error"
    ],
    "no-irregular-whitespace": [
      "error"
    ],
    "no-iterator": [
      "error"
    ],
    "no-label-var": [
      "error"
    ],
    "no-labels": [
      "warn",
      {
        "allowLoop": true,
        "allowSwitch": true
      }
    ],
    "no-lone-blocks": [
      "off"
    ],
    "no-lonely-if": [
      "warn"
    ],
    "no-loop-func": [
      "error"
    ],
    "no-magic-numbers": [
      "warn",
      {
        "ignoreArrayIndexes": true,
        "ignore": [
          -1,
          0,
          1,
          2,
          5,
          6
        ],
        "detectObjects": false,
        "enforceConst": false
      }
    ],
    "no-mixed-operators": [
      "warn",
      {
        "groups": [
          [
            "+",
            "-",
            "*",
            "/",
            "%",
            "**"
          ],
          [
            "&",
            "|",
            "^",
            "~",
            "<<",
            ">>",
            ">>>"
          ],
          [
            "==",
            "!=",
            "===",
            "!==",
            ">",
            ">=",
            "<",
            "<="
          ],
          [
            "&&",
            "||"
          ],
          [
            "in",
            "instanceof"
          ]
        ],
        "allowSamePrecedence": true
      }
    ],
    "no-mixed-requires": [
      "warn",
      {
        "grouping": false,
        "allowCall": true
      }
    ],
    "no-mixed-spaces-and-tabs": [
      "warn"
    ],
    "no-multi-assign": [
      "off"
    ],
    "no-multi-spaces": [
      "warn"
    ],
    "no-multi-str": [
      "off"
    ],
    "no-multiple-empty-lines": [
      "warn",
      {
        "max": 2,
        "maxBOF": 1,
        "maxEOF": 1
      }
    ],
    "no-native-reassign": [
      "off"
    ],
    "no-negated-condition": [
      "warn"
    ],
    "no-negated-in-lhs": [
      "off"
    ],
    "no-nested-ternary": [
      "warn"
    ],
    "no-new-func": [
      "warn"
    ],
    "no-new-object": [
      "warn"
    ],
    "no-new-require": [
      "warn"
    ],
    "no-new-symbol": [
      "error"
    ],
    "no-new-wrappers": [
      "error"
    ],
    "no-new": [
      "error"
    ],
    "no-obj-calls": [
      "error"
    ],
    "no-octal-escape": [
      "error"
    ],
    "no-octal": [
      "error"
    ],
    "no-param-reassign": [
      "warn",
      {
        "props": false
      }
    ],
    "no-path-concat": [
      "warn"
    ],
    "no-plusplus": [
      "off"
    ],
    "no-process-env": [
      "off"
    ],
    "no-process-exit": [
      "warn"
    ],
    "no-proto": [
      "error"
    ],
    "no-prototype-builtins": [
      "error"
    ],
    "no-redeclare": [
      "error",
      {
        "builtinGlobals": true
      }
    ],
    "no-regex-spaces": [
      "warn"
    ],
    "no-restricted-globals": [
      "error",
      "event"
    ],
    "no-restricted-imports": [
      "error"
    ],
    "no-restricted-modules": [
      "off"
    ],
    "no-restricted-properties": [
      "warn",
      {
        "object": "Math",
        "property": "pow",
        "message": "you can use ** operator"
      },
      {
        "object": "_",
        "property": "extend",
        "message": "you can use native Object.assign() instead"
      },
      {
        "object": "_",
        "property": "clone",
        "message": "you can use native Object.assign() instead"
      },
      {
        "object": "_",
        "property": "map",
        "message": "you can use native [].map() instead"
      },
      {
        "object": "_",
        "property": "each",
        "message": "you can use [].forEach()"
      },
      {
        "object": "_",
        "property": "every",
        "message": "you can use [].every()"
      },
      {
        "object": "_",
        "property": "some",
        "message": "you can use [].some()"
      },
      {
        "object": "_",
        "property": "find",
        "message": "you can use [].find()"
      },
      {
        "object": "_",
        "property": "indexOf",
        "message": "you can use [].indexOf()"
      },
      {
        "object": "_",
        "property": "contains",
        "message": "you can use [].indexOf()"
      },
      {
        "object": "_",
        "property": "findIndex",
        "message": "you can use [].findIndex()"
      },
      {
        "object": "_",
        "property": "includes",
        "message": "you can use [].includes()"
      },
      {
        "object": "_",
        "property": "filter",
        "message": "you can use native [].filter() instead"
      },
      {
        "object": "_",
        "property": "reduce",
        "message": "you can use native [].reduce() instead"
      },
      {
        "object": "_",
        "property": "reduceRight",
        "message": "you can use [].reduceRight()"
      },
      {
        "object": "_",
        "property": "head",
        "message": "you can use const [head] = array instead"
      },
      {
        "object": "_",
        "property": "tail",
        "message": "you can use const [...tail] = array instead"
      },
      {
        "object": "_",
        "property": "rest",
        "message": "you can use const (...rest) operator in ES6 instead"
      },
      {
        "object": "_",
        "property": "toArray",
        "message": "you can use const [...arguments] instead"
      },
      {
        "object": "_",
        "property": "isArray",
        "message": "you can use const Array.isArray() instead"
      },
      {
        "object": "_",
        "property": "compact",
        "message": "you can use [].filter(x => !!x) instead"
      },
      {
        "object": "_",
        "property": "uniq",
        "message": "you can use [...new Set(ARRAY)] instead"
      },
      {
        "object": "_",
        "property": "keys",
        "message": "you can use Object.keys() instead"
      },
      {
        "object": "_",
        "property": "size",
        "message": "you can use Object.keys().length instead"
      },
      {
        "object": "_",
        "property": "now",
        "message": "you can use Date.now() instead"
      },
      {
        "object": "$",
        "property": "clone",
        "message": "you can use element !== child && element.contains(child)"
      },
      {
        "object": "$",
        "property": "proxy",
        "message": "you can use fn.bind(context)"
      },
      {
        "object": "$",
        "property": "extend",
        "message": "you can use Object.assign()"
      },
      {
        "object": "$",
        "property": "inArray",
        "message": "you can use [].indexOf()"
      },
      {
        "object": "$",
        "property": "isArray",
        "message": "you can use Array.isArray()"
      },
      {
        "object": "$",
        "property": "map",
        "message": "you can use [].map()"
      },
      {
        "object": "$",
        "property": "now",
        "message": "you can use Date.now()"
      },
      {
        "object": "$",
        "property": "parseJSON",
        "message": "you can use JSON.parse(string)"
      },
      {
        "object": "$",
        "property": "trim",
        "message": "you can use string.trim()"
      },
      {
        "property": "__defineGetter__",
        "message": "use Object.defineProperty or simple getters"
      },
      {
        "property": "__defineSetter__",
        "message": "use Object.defineProperty or simple setters"
      },
      {
        "object": "arguments",
        "property": "caller",
        "message": "arguments.caller is deprecated"
      },
      {
        "object": "Date",
        "property": "toGMTString",
        "message": "it is deprecated. Use toISOString() instead"
      },
      {
        "object": "Date",
        "property": "getYear",
        "message": "it is affected with Y2K error. Use getFullYear() instead"
      },
      {
        "object": "Date",
        "property": "setYear",
        "message": "it is affected with Y2K error. Use setFullYear() instead"
      },
      {
        "object": "Number",
        "property": "toInteger",
        "message": "it is deprecated"
      }
    ],
    "no-restricted-syntax": [
      "off"
    ],
    "no-return-assign": [
      "error"
    ],
    "no-return-await": [
      "warn"
    ],
    "no-script-url": [
      "error"
    ],
    "no-self-assign": [
      "error"
    ],
    "no-self-compare": [
      "error"
    ],
    "no-sequences": [
      "warn"
    ],
    "no-shadow-restricted-names": [
      "error"
    ],
    "no-shadow": [
      "error",
      {
        "builtinGlobals": true,
        "hoist": "all"
      }
    ],
    "no-spaced-func": [
      "off"
    ],
    "no-sparse-arrays": [
      "error"
    ],
    "no-sync": [
      "warn"
    ],
    "no-tabs": [
      "warn"
    ],
    "no-template-curly-in-string": [
      "warn"
    ],
    "no-ternary": [
      "off"
    ],
    "no-this-before-super": [
      "error"
    ],
    "no-throw-literal": [
      "warn"
    ],
    "no-trailing-spaces": [
      "off"
    ],
    "no-undef-init": [
      "warn"
    ],
    "no-undef": [
      "error"
    ],
    "no-undefined": [
      "off"
    ],
    "no-underscore-dangle": [
      "off"
    ],
    "no-unexpected-multiline": [
      "error"
    ],
    "no-unmodified-loop-condition": [
      "error"
    ],
    "no-unneeded-ternary": [
      "warn",
      {
        "defaultAssignment": false
      }
    ],
    "no-unreachable": [
      "error"
    ],
    "no-unsafe-finally": [
      "error"
    ],
    "no-unsafe-negation": [
      "error"
    ],
    "no-unused-expressions": [
      "error",
      {
        "allowShortCircuit": false,
        "allowTernary": false
      }
    ],
    "no-unused-labels": [
      "warn"
    ],
    "no-unused-vars": [
      "error",
      {
        "vars": "local",
        "args": "after-used"
      }
    ],
    "no-use-before-define": [
      "error",
      {
        "functions": false,
        "classes": true
      }
    ],
    "no-useless-call": [
      "warn"
    ],
    "no-useless-computed-key": [
      "error"
    ],
    "no-useless-concat": [
      "warn"
    ],
    "no-useless-constructor": [
      "error"
    ],
    "no-useless-escape": [
      "warn"
    ],
    "no-useless-rename": [
      "off"
    ],
    "no-useless-return": [
      "warn"
    ],
    "no-var": [
      "warn"
    ],
    "no-void": [
      "warn"
    ],
    "no-warning-comments": [
      "warn",
      {
        "terms": [
          "todo",
          "fixme",
          "tech debt",
          "techdebt",
          "security"
        ],
        "location": "start"
      }
    ],
    "no-whitespace-before-property": [
      "warn"
    ],
    "no-with": [
      "warn"
    ],
    "object-curly-newline": [
      "warn",
      {
        "multiline": true
      }
    ],
    "object-curly-spacing": [
      "warn",
      "always"
    ],
    "object-property-newline": [
      "warn",
      {
        "allowMultiplePropertiesPerLine": true
      }
    ],
    "object-shorthand": [
      "warn",
      "always",
      {
        "avoidQuotes": true,
        "ignoreConstructors": true,
        "avoidExplicitReturnArrows": true
      }
    ],
    "one-var-declaration-per-line": [
      "warn",
      "initializations"
    ],
    "one-var": [
      "warn",
      {
        "uninitialized": "always",
        "initialized": "never"
      }
    ],
    "operator-assignment": [
      "warn",
      "always"
    ],
    "operator-linebreak": [
      "warn",
      "after",
      {
        "overrides": {
          ":": "before"
        }
      }
    ],
    "padded-blocks": [
      "warn",
      {
        "blocks": "never",
        "classes": "always",
        "switches": "never"
      }
    ],
    "prefer-arrow-callback": [
      "warn",
      {
        "allowNamedFunctions": false,
        "allowUnboundThis": true
      }
    ],
    "prefer-const": [
      "warn",
      {
        "destructuring": "any",
        "ignoreReadBeforeAssign": true
      }
    ],
    "prefer-destructuring": [
      "error"
    ],
    "prefer-numeric-literals": [
      "error"
    ],
    "prefer-promise-reject-errors": [
      "off"
    ],
    "prefer-reflect": [
      "off"
    ],
    "prefer-rest-params": [
      "error"
    ],
    "prefer-spread": [
      "error"
    ],
    "prefer-template": [
      "error"
    ],
    "quote-props": [
      "warn",
      "as-needed",
      {
        "keywords": false,
        "unnecessary": true,
        "numbers": false
      }
    ],
    "quotes": [
      "warn",
      "single",
      {
        "allowTemplateLiterals": true
      }
    ],
    "radix": [
      "warn",
      "as-needed"
    ],
    "require-await": [
      "error"
    ],
    "require-jsdoc": [
      "off"
    ],
    "require-yield": [
      "error"
    ],
    "rest-spread-spacing": [
      "warn",
      "never"
    ],
    "semi-spacing": [
      "warn",
      {
        "before": false,
        "after": true
      }
    ],
    "semi": [
      "warn",
      "always",
      {
        "omitLastInOneLineBlock": true
      }
    ],
    "sort-imports": [
      "warn"
    ],
    "sort-keys": [
      "off"
    ],
    "sort-vars": [
      "off"
    ],
    "space-before-blocks": [
      "warn",
      "always"
    ],
    "space-before-function-paren": [
      "warn",
      {
        "anonymous": "always",
        "named": "never",
        "asyncArrow": "always"
      }
    ],
    "space-in-parens": [
      "warn",
      "never"
    ],
    "space-infix-ops": [
      "warn",
      {
        "int32Hint": true
      }
    ],
    "space-unary-ops": [
      "warn",
      {
        "words": true,
        "nonwords": false
      }
    ],
    "spaced-comment": [
      "warn",
      "always",
      {
        "exceptions": [
          "!.*",
          "-",
          "+",
          "eslint-disable",
          "global",
          "eslint",
          "eslint-env"
        ]
      }
    ],
    "strict": [
      "warn",
      "safe"
    ],
    "symbol-description": [
      "error"
    ],
    "template-curly-spacing": [
      "error"
    ],
    "unicode-bom": [
      "off"
    ],
    "use-isnan": [
      "error"
    ],
    "valid-jsdoc": [
      "off"
    ],
    "valid-typeof": [
      "error",
      {
        "requireStringLiterals": true
      }
    ],
    "vars-on-top": [
      "warn"
    ],
    "wrap-iife": [
      "error",
      "outside",
      {
        "functionPrototypeMethods": false
      }
    ],
    "wrap-regex": [
      "warn"
    ],
    "yield-star-spacing": [
      "warn",
      "after"
    ],
    "yoda": [
      "warn",
      "never",
      {
        "onlyEquality": true
      }
    ]
  },
  "parserOptions": {
    "ecmaFeatures": {
      "globalReturn": true
    },
    "ecmaVersion": 6
  },
  "plugins": [
    "mocha",
    "chai",
    "node"
  ]
}
